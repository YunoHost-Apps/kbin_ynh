#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

email=$(ynh_user_get_info --username=$admin --key="mail")
app_secret=$(ynh_string_random --length=32 --filter="0-9a-f")
mercure_jwt_secret=$(ynh_string_random --length=24)

ynh_app_setting_set --app=$app --key=app_secret --value=$app_secret
ynh_app_setting_set --app=$app --key=mercure_jwt_secret --value=$mercure_jwt_secret

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..." --weight=7

# Install Nodejs
ynh_exec_warn_less ynh_install_nodejs --nodejs_version=$nodejs_version

#=================================================
# APP "BUILD" (DEPLOYING SOURCES, VENV, COMPILING ETC)
#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=1

ynh_setup_source --dest_dir="$install_dir"

chown -R $app:www-data "$install_dir"

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression --message="Adding system configurations related to $app..." --weight=1

# Create a dedicated PHP-FPM config using the conf/php-fpm.conf or conf/extra_php-fpm.conf
ynh_add_fpm_config --usage=low --footprint=low

# Create a dedicated NGINX config using the conf/nginx.conf template
ynh_add_nginx_config

# Create a dedicated systemd config
ynh_add_systemd_config --service=messenger-$app --template=messenger-$app.service
ynh_add_systemd_config --service=messenger-ap --template=messenger-ap.service

yunohost service add $app --description="Decentralized content aggregator and microblogging platform" --log="/var/log/$app/$app.log"

#=================================================
# APP INITIAL CONFIGURATION
#=================================================
# ADD A CONFIGURATION
#=================================================

# Install Symfony
#ynh_script_progression --message="Installing Symfony..." --weight=1
#ynh_install_extra_app_dependencies --repo="deb https://dl.cloudsmith.io/public/symfony/stable/deb/debian stable main" --package="symfony_cli" --key="https://dl.cloudsmith.io/public/symfony/stable/gpg.99CEF8A62216B73D.key"

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression --message="Adding a configuration file..." --weight=1

# Configure .env
ynh_add_config --template=".env" --destination="$install_dir/.env"

chmod 400 "$install_dir/.env"
chown $app:$app "$install_dir/.env"

#=================================================
# INSTALL KBIN WITH COMPOSER
#=================================================
ynh_script_progression --message="Installing $app with Composer..." --weight=5

ynh_install_composer #--install_args="--prefer-dist --no-dev --no-autoloader --no-scripts --no-progress"

#ynh_install_composer
#ynh_composer_exec --commands="dump-env prod"
#ynh_composer_exec --commands="install --prefer-dist --no-dev --no-autoloader --no-scripts --no-progress"
#ynh_composer_exec --commands="clear-cache"

pushd $install_dir
	ynh_exec_as $app php$phpversion bin/console doctrine:database:create
	ynh_exec_as $app php$phpversion bin/console doctrine:migrations:migrate
popd

# Use Doctrine to configure PostgreSQL database
#ynh_exec_as $app php$phpversion -d $install_dir -d memory_limit=-1 $install_dir/bin/console doctrine:database:create
#ynh_exec_as $app php$phpversion -d $install_dir -d memory_limit=-1 $install_dir/bin/console doctrine:migrations:migrate

# Build with Yarn
#corepack enable
#corepack prepare yarn@stable --activate

#=================================================
# INSTALL KBIN
#=================================================
ynh_script_progression --message="Build with $app with Yarn..." --weight=10

pushd $install_dir
 	ynh_use_nodejs
	ynh_exec_warn_less sudo -u $app env $ynh_node_load_PATH yarn install
	ynh_exec_warn_less sudo -u $app env $ynh_node_load_PATH NODE_ENV=production yarn build
popd

# TODO: Install Mercure ( https://mercure.rocks/ )
#https://github.com/dunglas/mercure/releases/download/v$mercure_version/mercure-legacy_$mercure_version_Linux_$arch.zip
#From the AUR:
#source=('mercure.service' 'mercure.sysusers' 'mercure.tmpfiles' 'Caddyfile' 'Caddyfile.dev')
#install -Dm 755 mercure "${pkgdir}"/usr/bin/mercure
#install -Dm 755 mercure.service "${pkgdir}"/usr/lib/systemd/system/mercure.service
#install -Dm 644 mercure.sysusers "${pkgdir}"/usr/lib/sysusers.d/mercure.conf
#install -Dm 644 mercure.tmpfiles "${pkgdir}"/usr/lib/tmpfiles.d/mercure.conf
##install -Dm 644 ../Caddyfile "${pkgdir}"/etc/mercure/Caddyfile
##install -Dm 644 ../Caddyfile.dev "${pkgdir}"/etc/mercure/Caddyfile.dev

pushd $install_dir
	php$phpversion bin/console kbin:user:create $admin $email $password
	# Grant administrator privileges
	php$phpversion bin/console kbin:user:admin $admin
	php$phpversion bin/console kbin:ap:keys:update
popd

# Use PHP to configure initial user and password, and add admin privileges
#ynh_exec_as $app php$phpversion -d $install_dir -d memory_limit=-1 $install_dir/bin/console $app:user:create "$admin" "$email" "$password"
#ynh_exec_as $app php$phpversion -d $install_dir -d memory_limit=-1 $install_dir/bin/console $app:user:admin "$admin"
#ynh_exec_as $app php$phpversion -d $install_dir -d memory_limit=-1 $install_dir/bin/console $app:ap:keys:update

mkdir "$install_dir/public/media"
chmod 777 "$install_dir/public/media"
chown $app:$app "$install_dir/public/media"

#=================================================
# GENERIC FINALIZATION
#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=1

# Start a systemd service
ynh_systemd_action --service_name=messenger-$app --action="start" --log_path="/var/log/$app/$app.log"
ynh_systemd_action --service_name=messenger-ap --action="start" --log_path="/var/log/$app/$app.log"

#=================================================
# END OF SCRIPT
#=================================================
ynh_script_progression --message="Installation of $app completed" --last
